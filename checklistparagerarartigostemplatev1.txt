# Checklist para gerar artigos de qualidade.

[] Definir o assunto;
[] T√≠tulo chamativo: headline;
[] Imagem de capa chamativa;
[] Blocos de artigos;
[] Postar o artigo com um call to action;


## Assunto
	Java Script;

## T√≠tulo
	"Melhores Pr√°ticas para Escrever Fun√ß√µes Eficientes e Leg√≠veis em JavaScript";

## Capa
	Feito com Lexi.art e Power Point;

## Blocos de artigos

Comporte-se como um escritor de artigos tech front-end e escreva o artigo atendendo as regras abaixo !

	{REGRAS}

> No m√°ximo 5 linhas por bloco de explica√ß√£o;
> Me explique de maneira informal, como se eu fosse uma crian√ßa de 10 anos;
> Os blocos que ser√£o criados est√£o abaixo:


- Quais s√£o as melhores pr√°ticas para escrever e sua legibilidade;
- Qu√£o eficiente deve ser a escrita do c√≥digo; 
- O que s√£o fun√ß√µes e quais suas funcionalidades;
- Cite exemplos objetivos e claros;
- Fa√ßa um call to action para as minhas redes socias;
- Coloque 3 hashtags que fa√ßam sentido;




Melhores Pr√°ticas para Escrever C√≥digo e sua Legibilidade


Introdu√ß√£o

Quando escrevemos c√≥digo, precisamos deixar ele bem f√°cil de entender, como se fosse um livro de hist√≥rias. Usar nomes claros para vari√°veis e fun√ß√µes, como "idadeDoCachorro" ao inv√©s de "x", ajuda muito. Coment√°rios tamb√©m s√£o legais, mas s√≥ quando explicam algo dif√≠cil. Imagina que um amigo seu vai ler o c√≥digo; ele tem que entender tudo sem pedir ajuda.


Efici√™ncia na Escrita do C√≥digo


Escrever c√≥digo eficiente √© como fazer um sandu√≠che bem r√°pido. N√£o adianta s√≥ ser r√°pido, tem que ficar gostoso! Isso quer dizer que o c√≥digo deve rodar rapidinho, sem gastar muita mem√≥ria do computador. Usar fun√ß√µes prontas, como as do JavaScript, pode ajudar a economizar tempo e deixar tudo mais r√°pido.



O Que S√£o Fun√ß√µes e Quais Suas Funcionalidades


Fun√ß√µes s√£o como receitas de cozinha. Voc√™ diz ao computador o que fazer passo a passo. Quando voc√™ precisa daquela tarefa de novo, s√≥ chama a receita pelo nome e pronto! Elas ajudam a organizar o c√≥digo e a reutilizar peda√ßos dele sem repetir tudo de novo.



Exemplos Objetivos e Claros:


Vamos fazer uma fun√ß√£o para dizer "Oi" para algu√©m:


function dizerOi(nome) {

  console.log("Oi, " + nome + "!");

}



dizerOi("Ana"); // Isso vai mostrar "Oi, Ana!"



Uma fun√ß√£o para somar dois n√∫meros:


function somar(a, b) {

  return a + b;

}



let resultado = somar(5, 3); // Isso vai dar 8



Fun√ß√£o para calcular a √°rea de um quadrado:


function calcularAreaQuadrado(lado) {

  return lado * lado;

}



let area = calcularAreaQuadrado(4); // Isso vai dar 16



Fun√ß√£o para verificar se um n√∫mero √© par:


function ehPar(numero) {

  return numero % 2 === 0;

}



let resultado = ehPar(10); // Isso vai dar true



Fun√ß√£o para converter Celsius para Fahrenheit:


function converterParaFahrenheit(celsius) {

  return (celsius * 9/5) + 32;

}



let fahrenheit = converterParaFahrenheit(25); // Isso vai dar 77



Fun√ß√£o para contar o n√∫mero de letras em uma palavra:


function contarLetras(palavra) {

  return palavra.length;

}



let quantidade = contarLetras("gato"); // Isso vai dar 4



Fun√ß√£o para inverter uma string:


function inverterString(texto) {

  return texto.split('').reverse().join('');

}



let invertido = inverterString("casa"); // Isso vai dar "asac"



Fun√ß√£o para encontrar o maior n√∫mero em um array:


function encontrarMaiorNumero(numeros) {

  return Math.max(...numeros);

}



let maior = encontrarMaiorNumero([1, 5, 3, 9, 2]); // Isso vai dar 9



Fun√ß√£o para somar todos os n√∫meros de um array:


function somarArray(numeros) {

  return numeros.reduce((total, numero) => total + numero, 0);

}



let soma = somarArray([1, 2, 3, 4]); // Isso vai dar 10



Fun√ß√£o para remover elementos duplicados de um array:


function removerDuplicados(array) {

  return [...new Set(array)];

}



let semDuplicados = removerDuplicados([1, 2, 2, 3, 4, 4]); // Isso vai dar [1, 2, 3, 4]



Fun√ß√£o para verificar se uma palavra √© um pal√≠ndromo:


function ehPalindromo(palavra) {

  let palavraInvertida = palavra.split('').reverse().join('');

  return palavra === palavraInvertida;

}



let palindromo = ehPalindromo("arara"); // Isso vai dar true



Fun√ß√£o para capitalizar a primeira letra de cada palavra em uma frase:


function capitalizarPalavras(frase) {

  return frase.split(' ').map(palavra => palavra.charAt(0).toUpperCase() + palavra.slice(1)).join(' ');

}



let fraseCapitalizada = capitalizarPalavras("ola mundo"); // Isso vai dar "Ola Mundo"



Call to Action
Gostou das dicas? Quer aprender mais sobre programa√ß√£o de um jeito divertido? Siga minhas redes sociais para mais truques e novidades! üöÄ



Hashtags
#Programa√ß√£oDivertida #DicasDeC√≥digo #AprendizadoTech #JavaScript



Fontes de reprodu√ß√£o:
Imagens criadas por Lexica.art.
Diagrama√ß√£o feita por Power Point.
Conte√∫do criado por ChatGpt e revis√µes 100% humanas.